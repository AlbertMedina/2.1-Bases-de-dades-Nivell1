-- MySQL Script generated by MySQL Workbench
-- Tue Oct 21 18:40:13 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema level2
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `level2` ;

-- -----------------------------------------------------
-- Schema level2
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `level2` DEFAULT CHARACTER SET utf8 ;
USE `level2` ;

-- -----------------------------------------------------
-- Table `level2`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level2`.`users` ;

CREATE TABLE IF NOT EXISTS `level2`.`users` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NOT NULL,
  `passcode` VARCHAR(45) NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `birth_date` DATE NOT NULL,
  `gender` VARCHAR(45) NOT NULL,
  `country` VARCHAR(45) NOT NULL,
  `postcode` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`user_id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `email_UNIQUE` ON `level2`.`users` (`email` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `level2`.`videos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level2`.`videos` ;

CREATE TABLE IF NOT EXISTS `level2`.`videos` (
  `video_id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  `file_size` FLOAT NOT NULL,
  `file_name` VARCHAR(45) NOT NULL,
  `duration` INT NOT NULL,
  `thumbnail` VARCHAR(45) NOT NULL,
  `views` INT NOT NULL,
  `likes` INT NOT NULL,
  `dislikes` INT NOT NULL,
  `state` ENUM('public', 'hidden', 'private') NOT NULL,
  `upload_date` DATETIME NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`video_id`),
  CONSTRAINT `video_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `level2`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_video_user1_idx` ON `level2`.`videos` (`user_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `level2`.`tags`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level2`.`tags` ;

CREATE TABLE IF NOT EXISTS `level2`.`tags` (
  `tag_id` INT NOT NULL AUTO_INCREMENT,
  `tag_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`tag_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `level2`.`channels`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level2`.`channels` ;

CREATE TABLE IF NOT EXISTS `level2`.`channels` (
  `channel_id` INT NOT NULL AUTO_INCREMENT,
  `channel_name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  `creation_date` DATE NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`channel_id`),
  CONSTRAINT `channel_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `level2`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_channel_user1_idx` ON `level2`.`channels` (`user_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `level2`.`subscriptions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level2`.`subscriptions` ;

CREATE TABLE IF NOT EXISTS `level2`.`subscriptions` (
  `channel_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`channel_id`, `user_id`),
  CONSTRAINT `subscription_channel`
    FOREIGN KEY (`channel_id`)
    REFERENCES `level2`.`channels` (`channel_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `subscription_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `level2`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_subscription_channel1_idx` ON `level2`.`subscriptions` (`channel_id` ASC) VISIBLE;

CREATE INDEX `fk_subscription_user1_idx` ON `level2`.`subscriptions` (`user_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `level2`.`playlists`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level2`.`playlists` ;

CREATE TABLE IF NOT EXISTS `level2`.`playlists` (
  `playlist_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `creation_date` DATE NOT NULL,
  `state` ENUM('public', 'private') NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`playlist_id`),
  CONSTRAINT `playlist_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `level2`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_playlist_user1_idx` ON `level2`.`playlists` (`user_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `level2`.`comments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level2`.`comments` ;

CREATE TABLE IF NOT EXISTS `level2`.`comments` (
  `comment_id` INT NOT NULL AUTO_INCREMENT,
  `comment_text` VARCHAR(45) NOT NULL,
  `comment_date` DATETIME NOT NULL,
  `video_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`comment_id`),
  CONSTRAINT `comment_video`
    FOREIGN KEY (`video_id`)
    REFERENCES `level2`.`videos` (`video_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `comment_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `level2`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_comment_video1_idx` ON `level2`.`comments` (`video_id` ASC) VISIBLE;

CREATE INDEX `fk_comment_user1_idx` ON `level2`.`comments` (`user_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `level2`.`video_playlists`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level2`.`video_playlists` ;

CREATE TABLE IF NOT EXISTS `level2`.`video_playlists` (
  `playlist_id` INT NOT NULL,
  `video_id` INT NOT NULL,
  PRIMARY KEY (`playlist_id`, `video_id`),
  CONSTRAINT `video_playlist_playlist`
    FOREIGN KEY (`playlist_id`)
    REFERENCES `level2`.`playlists` (`playlist_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `video_playlist_video`
    FOREIGN KEY (`video_id`)
    REFERENCES `level2`.`videos` (`video_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_video_playlist_playlist1_idx` ON `level2`.`video_playlists` (`playlist_id` ASC) VISIBLE;

CREATE INDEX `fk_video_playlist_video1_idx` ON `level2`.`video_playlists` (`video_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `level2`.`comment_reactions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level2`.`comment_reactions` ;

CREATE TABLE IF NOT EXISTS `level2`.`comment_reactions` (
  `comment_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `reaction_type` ENUM('like', 'dislike') NOT NULL,
  `reaction_date` DATETIME NOT NULL,
  PRIMARY KEY (`comment_id`, `user_id`),
  CONSTRAINT `comment_reaction_comment`
    FOREIGN KEY (`comment_id`)
    REFERENCES `level2`.`comments` (`comment_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `comment_reaction_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `level2`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `comment_reaction_comment_idx` ON `level2`.`comment_reactions` (`comment_id` ASC) VISIBLE;

CREATE INDEX `comment_reaction_user_idx` ON `level2`.`comment_reactions` (`user_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `level2`.`video_reactions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level2`.`video_reactions` ;

CREATE TABLE IF NOT EXISTS `level2`.`video_reactions` (
  `video_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `reaction_type` ENUM('like', 'dislike') NOT NULL,
  `reaction_date` DATETIME NOT NULL,
  PRIMARY KEY (`video_id`, `user_id`),
  CONSTRAINT `video_reaction_video`
    FOREIGN KEY (`video_id`)
    REFERENCES `level2`.`videos` (`video_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `video_reaction_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `level2`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `vide_reaction_video_idx` ON `level2`.`video_reactions` (`video_id` ASC) VISIBLE;

CREATE INDEX `video_reaction_user_idx` ON `level2`.`video_reactions` (`user_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `level2`.`video_tags`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level2`.`video_tags` ;

CREATE TABLE IF NOT EXISTS `level2`.`video_tags` (
  `video_id` INT NOT NULL,
  `tag_id` INT NOT NULL,
  PRIMARY KEY (`video_id`, `tag_id`),
  CONSTRAINT `video_tag_video`
    FOREIGN KEY (`video_id`)
    REFERENCES `level2`.`videos` (`video_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `video_tag_tag`
    FOREIGN KEY (`tag_id`)
    REFERENCES `level2`.`tags` (`tag_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `video_tag_tag_idx` ON `level2`.`video_tags` (`tag_id` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
