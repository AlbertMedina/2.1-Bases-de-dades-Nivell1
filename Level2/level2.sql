-- MySQL Script generated by MySQL Workbench
-- Wed Oct 22 11:24:39 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema level2
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `level2` ;

-- -----------------------------------------------------
-- Schema level2
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `level2` DEFAULT CHARACTER SET utf8 ;
USE `level2` ;

-- -----------------------------------------------------
-- Table `level2`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level2`.`users` ;

CREATE TABLE IF NOT EXISTS `level2`.`users` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NOT NULL,
  `passcode` VARCHAR(45) NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `birth_date` DATE NOT NULL,
  `gender` VARCHAR(45) NOT NULL,
  `country` VARCHAR(45) NOT NULL,
  `postcode` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `level2`.`videos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level2`.`videos` ;

CREATE TABLE IF NOT EXISTS `level2`.`videos` (
  `video_id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NOT NULL,
  `video_description` VARCHAR(100) NOT NULL,
  `file_size` FLOAT NOT NULL,
  `file_name` VARCHAR(45) NOT NULL,
  `duration` INT NOT NULL,
  `thumbnail` VARCHAR(45) NOT NULL,
  `views` INT NOT NULL,
  `likes` INT NOT NULL,
  `dislikes` INT NOT NULL,
  `state` ENUM('public', 'hidden', 'private') NOT NULL,
  `upload_date` DATETIME NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`video_id`),
  INDEX `fk_video_user1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `video_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `level2`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `level2`.`tags`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level2`.`tags` ;

CREATE TABLE IF NOT EXISTS `level2`.`tags` (
  `tag_id` INT NOT NULL AUTO_INCREMENT,
  `tag_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`tag_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `level2`.`channels`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level2`.`channels` ;

CREATE TABLE IF NOT EXISTS `level2`.`channels` (
  `channel_id` INT NOT NULL AUTO_INCREMENT,
  `channel_name` VARCHAR(45) NOT NULL,
  `channel_description` VARCHAR(100) NOT NULL,
  `creation_date` DATE NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`channel_id`),
  INDEX `fk_channel_user1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `channel_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `level2`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `level2`.`subscriptions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level2`.`subscriptions` ;

CREATE TABLE IF NOT EXISTS `level2`.`subscriptions` (
  `channel_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  INDEX `fk_subscription_channel1_idx` (`channel_id` ASC) VISIBLE,
  INDEX `fk_subscription_user1_idx` (`user_id` ASC) VISIBLE,
  PRIMARY KEY (`channel_id`, `user_id`),
  CONSTRAINT `subscription_channel`
    FOREIGN KEY (`channel_id`)
    REFERENCES `level2`.`channels` (`channel_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `subscription_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `level2`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `level2`.`playlists`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level2`.`playlists` ;

CREATE TABLE IF NOT EXISTS `level2`.`playlists` (
  `playlist_id` INT NOT NULL AUTO_INCREMENT,
  `playlist_name` VARCHAR(45) NOT NULL,
  `creation_date` DATE NOT NULL,
  `state` ENUM('public', 'private') NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`playlist_id`),
  INDEX `fk_playlist_user1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `playlist_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `level2`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `level2`.`comments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level2`.`comments` ;

CREATE TABLE IF NOT EXISTS `level2`.`comments` (
  `comment_id` INT NOT NULL AUTO_INCREMENT,
  `comment_text` VARCHAR(45) NOT NULL,
  `comment_date` DATETIME NOT NULL,
  `video_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`comment_id`),
  INDEX `fk_comment_video1_idx` (`video_id` ASC) VISIBLE,
  INDEX `fk_comment_user1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `comment_video`
    FOREIGN KEY (`video_id`)
    REFERENCES `level2`.`videos` (`video_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `comment_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `level2`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `level2`.`video_playlists`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level2`.`video_playlists` ;

CREATE TABLE IF NOT EXISTS `level2`.`video_playlists` (
  `playlist_id` INT NOT NULL,
  `video_id` INT NOT NULL,
  INDEX `fk_video_playlist_playlist1_idx` (`playlist_id` ASC) VISIBLE,
  INDEX `fk_video_playlist_video1_idx` (`video_id` ASC) VISIBLE,
  PRIMARY KEY (`playlist_id`, `video_id`),
  CONSTRAINT `video_playlist_playlist`
    FOREIGN KEY (`playlist_id`)
    REFERENCES `level2`.`playlists` (`playlist_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `video_playlist_video`
    FOREIGN KEY (`video_id`)
    REFERENCES `level2`.`videos` (`video_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `level2`.`comment_reactions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level2`.`comment_reactions` ;

CREATE TABLE IF NOT EXISTS `level2`.`comment_reactions` (
  `comment_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `reaction_type` ENUM('like', 'dislike') NOT NULL,
  `reaction_date` DATETIME NOT NULL,
  INDEX `comment_reaction_comment_idx` (`comment_id` ASC) VISIBLE,
  INDEX `comment_reaction_user_idx` (`user_id` ASC) VISIBLE,
  PRIMARY KEY (`comment_id`, `user_id`),
  CONSTRAINT `comment_reaction_comment`
    FOREIGN KEY (`comment_id`)
    REFERENCES `level2`.`comments` (`comment_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `comment_reaction_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `level2`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `level2`.`video_reactions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level2`.`video_reactions` ;

CREATE TABLE IF NOT EXISTS `level2`.`video_reactions` (
  `video_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `reaction_type` ENUM('like', 'dislike') NOT NULL,
  `reaction_date` DATETIME NOT NULL,
  INDEX `vide_reaction_video_idx` (`video_id` ASC) VISIBLE,
  INDEX `video_reaction_user_idx` (`user_id` ASC) VISIBLE,
  PRIMARY KEY (`video_id`, `user_id`),
  CONSTRAINT `video_reaction_video`
    FOREIGN KEY (`video_id`)
    REFERENCES `level2`.`videos` (`video_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `video_reaction_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `level2`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `level2`.`video_tags`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level2`.`video_tags` ;

CREATE TABLE IF NOT EXISTS `level2`.`video_tags` (
  `video_id` INT NOT NULL,
  `tag_id` INT NOT NULL,
  PRIMARY KEY (`video_id`, `tag_id`),
  INDEX `video_tag_tag_idx` (`tag_id` ASC) VISIBLE,
  CONSTRAINT `video_tag_video`
    FOREIGN KEY (`video_id`)
    REFERENCES `level2`.`videos` (`video_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `video_tag_tag`
    FOREIGN KEY (`tag_id`)
    REFERENCES `level2`.`tags` (`tag_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Inserting sample data into tables
-- -----------------------------------------------------

-- Users
INSERT INTO users
(email, passcode, username, birth_date, gender, country, postcode)
VALUES
('albert@example.com', '1234', 'Albert_1', '1999-11-12', 'male', 'Spain', '08001'),
('joan@example.com', '5678', 'Joan-ABC', '2001-01-31', 'male', 'Spain', '08001'),
('anna@example.com', 'ABCD', 'Anna555', '2000-04-23', 'female', 'Spain', '17001'),
('pau@example.com', 'EFGH', 'Pau_XYZ', '1998-07-18', 'male', 'Spain', '17001');

-- Channels
INSERT INTO channels
(channel_name, channel_description, creation_date, user_id)
VALUES
('Albert_Tech', 'Technology videos and tutorials', '2020-01-01', 1),
('Joan-Games', 'Gameplays and game reviews', '2020-02-01', 2),
('AnnaMusic', 'Songs and covers', '2020-03-01', 3),
('PauTrips', 'Trips around the world', '2020-04-01', 4);

-- Subscriptions
INSERT INTO subscriptions
(channel_id, user_id)
VALUES
(1, 2),
(1, 4),
(2, 1),
(3, 1),
(4, 1),
(4, 3);

-- Videos
INSERT INTO videos
(title, video_description, file_size, file_name, duration, thumbnail, views, likes, dislikes, state, upload_date, user_id)
VALUES
('MySQL Workbench tutorial', 'Learn how to use MySQL Workbench', 500.0, 'mysql-workbench.mp4', 600, 'mysql-workbench.png', 10000, 1000, 10, 'public', '2025-01-01 12:00:00', 1),
('Playing Little Nightmares III', 'Gameplay of the new Little Nightmares game', 1800.0, 'little-nightmares-iii.mp4', 900, 'little-nightmares-iii.png', 20000, 5000, 50, 'public', '2025-01-10 14:00:00', 2),
('My new song', 'Presenting the last song I wrote', 200.0, 'my-new-song.mp4', 300, 'my-new-song.png', 50000, 20000, 100, 'public', '2025-01-20 18:00:00', 3),
('Visiting New York', 'Vlog of my last trip to New York', 1000.0, 'new-york.mp4', 1200, 'new-york.png', 1000, 20, 1, 'public', '2025-01-31 20:00:00', 4);

-- Tags
INSERT INTO tags
(tag_name)
VALUES
('Technology'),
('Videogames'),
('Music'),
('Trips'),
('Vlog'),
('Tutorial');

-- Video tags
INSERT INTO video_tags
(video_id, tag_id)
VALUES
(1, 1),
(1, 6),
(2, 2),
(3, 3),
(4, 4),
(4, 5);

-- Video reactions
INSERT INTO video_reactions
(video_id, user_id, reaction_type, reaction_date)
VALUES
(1, 2, 'like', '2025-02-01 21:00:00'),
(2, 1, 'like', '2025-02-06 21:00:00'),
(3, 1, 'like', '2025-02-12 21:00:00'),
(4, 3, 'like', '2025-02-01 21:00:00'),
(2, 3, 'dislike', '2025-02-20 21:00:00');

-- Coments
INSERT INTO comments
(comment_text, comment_date, video_id, user_id)
VALUES
('Nice tutorial!', '2025-02-01 21:01:00', 1, 2),
('Goog game!', '2025-02-06 21:01:00', 2, 1),
('Amazing song!', '2025-02-12 21:01:00', 3, 1),
('I love NY!', '2025-02-15 21:01:00', 4, 3);

-- Comment reactions
INSERT INTO comment_reactions
(comment_id, user_id, reaction_type, reaction_date)
VALUES
(1, 1, 'like', '2025-02-01 21:02:00'),
(2, 2, 'like', '2025-02-06 21:02:00'),
(3, 3, 'like', '2025-02-12 21:02:00'),
(4, 2, 'dislike', '2025-02-15 21:02:00');

-- Playlists
INSERT INTO playlists
(playlist_name, creation_date, state, user_id)
VALUES
('Watch later', '2024-03-15', 'private', 1),
('Tutorials', '2023-06-15', 'public', 2),
('Trips', '2023-09-10', 'private', 3),
('My favourite videos', '2024-07-25', 'private', 4);

-- Video playlists
INSERT INTO video_playlists
(playlist_id, video_id)
VALUES
(1, 3),
(1, 4),
(2, 1),
(3, 4),
(4, 2),
(4, 3);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


-- -----------------------------------------------------
-- Testing with some queries
-- -----------------------------------------------------

-- Show users table
SELECT * FROM users;

-- Show channels table
SELECT * FROM channels;

-- Show subscriptions table
SELECT * FROM subscriptions;

-- Show videos table
SELECT * FROM videos;

-- Show tags table
SELECT * FROM tags;

-- Show video tags table
SELECT * FROM video_tags;

-- Show video reactions table
SELECT * FROM video_reactions;

-- Show comments table
SELECT * FROM comments;

-- Show comment reactions table
SELECT * FROM comment_reactions;

-- Show playlists table
SELECT * FROM playlists;

-- Show video playlists table
SELECT * FROM video_playlists;