-- MySQL Script generated by MySQL Workbench
-- Tue Oct 21 22:58:44 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema level1ex2
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `level1ex2` ;

-- -----------------------------------------------------
-- Schema level1ex2
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `level1ex2` DEFAULT CHARACTER SET utf8 ;
USE `level1ex2` ;

-- -----------------------------------------------------
-- Table `level1ex2`.`provinces`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level1ex2`.`provinces` ;

CREATE TABLE IF NOT EXISTS `level1ex2`.`provinces` (
  `province_id` INT NOT NULL AUTO_INCREMENT,
  `province_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`province_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `level1ex2`.`cities`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level1ex2`.`cities` ;

CREATE TABLE IF NOT EXISTS `level1ex2`.`cities` (
  `city_id` INT NOT NULL AUTO_INCREMENT,
  `city_name` VARCHAR(45) NOT NULL,
  `province_id` INT NOT NULL,
  PRIMARY KEY (`city_id`),
  INDEX `city_province_idx` (`province_id` ASC) VISIBLE,
  CONSTRAINT `city_province`
    FOREIGN KEY (`province_id`)
    REFERENCES `level1ex2`.`provinces` (`province_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `level1ex2`.`customers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level1ex2`.`customers` ;

CREATE TABLE IF NOT EXISTS `level1ex2`.`customers` (
  `customer_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `surname` VARCHAR(45) NOT NULL,
  `address` VARCHAR(45) NOT NULL,
  `postcode` VARCHAR(45) NOT NULL,
  `city_id` INT NOT NULL,
  `telephone` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`customer_id`),
  INDEX `customer_city_idx` (`city_id` ASC) VISIBLE,
  CONSTRAINT `customer_city`
    FOREIGN KEY (`city_id`)
    REFERENCES `level1ex2`.`cities` (`city_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `level1ex2`.`shops`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level1ex2`.`shops` ;

CREATE TABLE IF NOT EXISTS `level1ex2`.`shops` (
  `shop_id` INT NOT NULL AUTO_INCREMENT,
  `address` VARCHAR(45) NOT NULL,
  `postcode` VARCHAR(45) NOT NULL,
  `city_id` INT NOT NULL,
  PRIMARY KEY (`shop_id`),
  INDEX `shop_city_idx` (`city_id` ASC) VISIBLE,
  CONSTRAINT `shop_city`
    FOREIGN KEY (`city_id`)
    REFERENCES `level1ex2`.`cities` (`city_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `level1ex2`.`employees`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level1ex2`.`employees` ;

CREATE TABLE IF NOT EXISTS `level1ex2`.`employees` (
  `employee_id` INT NOT NULL AUTO_INCREMENT,
  `employee_name` VARCHAR(45) NOT NULL,
  `surname` VARCHAR(45) NOT NULL,
  `nif` VARCHAR(45) NOT NULL,
  `telephone` VARCHAR(45) NOT NULL,
  `position` ENUM('cook', 'deliverer') NOT NULL,
  `shop_id` INT NOT NULL,
  PRIMARY KEY (`employee_id`),
  INDEX `employee_shop_idx` (`shop_id` ASC) VISIBLE,
  UNIQUE INDEX `nif_UNIQUE` (`nif` ASC) VISIBLE,
  CONSTRAINT `employee_shop`
    FOREIGN KEY (`shop_id`)
    REFERENCES `level1ex2`.`shops` (`shop_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `level1ex2`.`orders`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level1ex2`.`orders` ;

CREATE TABLE IF NOT EXISTS `level1ex2`.`orders` (
  `order_id` INT NOT NULL AUTO_INCREMENT,
  `order_date` DATETIME NOT NULL,
  `order_type` ENUM('delivery', 'shop') NOT NULL,
  `total_price` FLOAT NOT NULL,
  `customer_id` INT NOT NULL,
  `shop_id` INT NOT NULL,
  `deliverer_id` INT NULL,
  `delivery_date` DATETIME NULL,
  PRIMARY KEY (`order_id`),
  INDEX `customer_id_idx` (`customer_id` ASC) VISIBLE,
  INDEX `order_shop_idx` (`shop_id` ASC) VISIBLE,
  INDEX `order_deliverer_idx` (`deliverer_id` ASC) VISIBLE,
  CONSTRAINT `order_customer`
    FOREIGN KEY (`customer_id`)
    REFERENCES `level1ex2`.`customers` (`customer_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `order_shop`
    FOREIGN KEY (`shop_id`)
    REFERENCES `level1ex2`.`shops` (`shop_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `order_deliverer`
    FOREIGN KEY (`deliverer_id`)
    REFERENCES `level1ex2`.`employees` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `level1ex2`.`products`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level1ex2`.`products` ;

CREATE TABLE IF NOT EXISTS `level1ex2`.`products` (
  `product_id` INT NOT NULL AUTO_INCREMENT,
  `product_type` ENUM('pizza', 'burger', 'drink') NOT NULL,
  `product_name` VARCHAR(45) NOT NULL,
  `product_description` VARCHAR(100) NOT NULL,
  `image` VARCHAR(45) NOT NULL,
  `price` FLOAT NOT NULL,
  PRIMARY KEY (`product_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `level1ex2`.`orders_products`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level1ex2`.`orders_products` ;

CREATE TABLE IF NOT EXISTS `level1ex2`.`orders_products` (
  `order_id` INT NOT NULL,
  `product_id` INT NOT NULL,
  `amount` INT NOT NULL,
  INDEX `order_idx` (`order_id` ASC) VISIBLE,
  INDEX `product_idx` (`product_id` ASC) VISIBLE,
  CONSTRAINT `order_product_order`
    FOREIGN KEY (`order_id`)
    REFERENCES `level1ex2`.`orders` (`order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `order_product_product`
    FOREIGN KEY (`product_id`)
    REFERENCES `level1ex2`.`products` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `level1ex2`.`categories`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level1ex2`.`categories` ;

CREATE TABLE IF NOT EXISTS `level1ex2`.`categories` (
  `category_id` INT NOT NULL AUTO_INCREMENT,
  `category_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`category_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `level1ex2`.`pizzas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level1ex2`.`pizzas` ;

CREATE TABLE IF NOT EXISTS `level1ex2`.`pizzas` (
  `pizza_id` INT NOT NULL AUTO_INCREMENT,
  `category_id` INT NOT NULL,
  `product_id` INT NOT NULL,
  PRIMARY KEY (`pizza_id`),
  INDEX `pizza_category_idx` (`category_id` ASC) VISIBLE,
  INDEX `pizza_product_idx` (`product_id` ASC) VISIBLE,
  CONSTRAINT `pizza_category`
    FOREIGN KEY (`category_id`)
    REFERENCES `level1ex2`.`categories` (`category_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `pizza_product`
    FOREIGN KEY (`product_id`)
    REFERENCES `level1ex2`.`products` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Inserting sample data into tables
-- -----------------------------------------------------

-- Provinces
INSERT INTO provinces
(province_name)
VALUES
('Barcelona'),
('Girona');

-- Cities
INSERT INTO cities
(city_name, province_id)
VALUES
('Barcelona', 1),
('Matar√≥', 1),
('Girona', 2);

-- Shops
INSERT INTO shops
(address, postcode, city_id)
VALUES
('Street A, 11', '08001', 1),
('Street B, 22', '08202', 2),
('Street C, 33', '17001', 3);

-- Employees
INSERT INTO employees
(employee_name, surname, nif, telephone, position, shop_id)
VALUES
('Albert', 'Medina', '12345678A', '666666666', 'cook', 1),
('Joan', 'Roca', '87654321B', '666777888', 'deliverer', 2),
('Anna', 'Puig', '11112222C', '666555444', 'deliverer', 3);

-- Customers
INSERT INTO customers (name, surname, address, postcode, city_id, telephone)
VALUES
('Pau', 'Garcia', 'Street D, 44', '08221', 1, '611111111'),
('Marc', 'Perez', 'Street E, 55', '08202', 2, '622222222'),
('Maria', 'Grau', 'Street F, 66', '08202', 3, '633333333');

-- Categories
INSERT INTO categories
(category_name)
VALUES
('Classic'),
('Spicy'),
('Sweet');

-- Products
INSERT INTO products (product_type, product_name, product_description, image, price)
VALUES
('pizza', 'Margherita', 'Pizza with tomato and cheese', 'margherita.png', 10.0),
('pizza', 'Spicy Prosciutto', 'Pizza with tomato, cheese, ham and spicy sauce', 'spicy-prosciutto.png', 12.0),
('pizza', 'Nutella Pizza', 'Pizza with nutella', 'nutella-pizza.png', 8.0),
('burger', 'Cheeseburger', 'Burger with cheese', 'cheeseburger.png', 7.0),
('drink', 'Water', 'Bottle of water', 'water.png', 1.0),
('drink', 'Beer', 'Estrella Damm', 'beer.png', 2.0);

-- Pizzas
INSERT INTO pizzas
(category_id, product_id)
VALUES
(1, 1),
(2, 2),
(3, 3);

-- Orders
INSERT INTO orders
(order_date, order_type, total_price, customer_id, shop_id, deliverer_id, delivery_date)
VALUES 
('2025-01-01 21:00:00', 'delivery', 16.0, 1, 1, 2, '2025-01-01 21:15:00'),
('2025-01-01 21:30:00', 'shop', 11.0, 3, 3, NULL, NULL),
('2025-01-01 22:00:00', 'delivery', 9.0, 2, 2, 3, '2025-01-01 22:15:00'),
('2025-01-01 22:15:00', 'delivery', 10.0, 1, 1, 2, '2025-01-01 22:45:00');

-- Orders_Products
INSERT INTO orders_products
(order_id, product_id, amount)
VALUES 
(1, 2, 1),
(1, 6, 2),
(2, 1, 1),
(2, 5, 1),
(3, 3, 1),
(3, 5, 1),
(4, 4, 1),
(4, 5, 1),
(4, 6, 1);

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


-- -----------------------------------------------------
-- Testing with some queries
-- -----------------------------------------------------

-- Drinks sold in a given city
SELECT p.product_name AS drink, SUM(op.amount) AS amount
FROM orders_products op
JOIN orders o ON op.order_id = o.order_id
JOIN products p ON op.product_id = p.product_id
JOIN customers cus ON o.customer_id = cus.customer_id
JOIN cities c ON cus.city_id = c.city_id
WHERE p.product_type = 'drink' AND c.city_name = 'Barcelona'
GROUP BY p.product_name;

-- Orders by employee
SELECT e.nif AS employee_nif, e.employee_name AS employee_name, e.surname AS employee_surname, COUNT(o.order_id) AS total_comandes
FROM orders o
JOIN employees e ON o.deliverer_id = e.employee_id
WHERE e.nif = '87654321B'
GROUP BY e.employee_id;