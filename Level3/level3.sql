-- MySQL Script generated by MySQL Workbench
-- Tue Oct 21 13:12:29 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema level3
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `level3` ;

-- -----------------------------------------------------
-- Schema level3
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `level3` DEFAULT CHARACTER SET utf8 ;
USE `level3` ;

-- -----------------------------------------------------
-- Table `level3`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level3`.`user` ;

CREATE TABLE IF NOT EXISTS `level3`.`user` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `birth_date` DATE NOT NULL,
  `gender` VARCHAR(45) NOT NULL,
  `country` VARCHAR(45) NOT NULL,
  `postcode` VARCHAR(45) NOT NULL,
  `type` ENUM('free', 'premium') NOT NULL,
  PRIMARY KEY (`user_id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `email_UNIQUE` ON `level3`.`user` (`email` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `level3`.`subscription`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level3`.`subscription` ;

CREATE TABLE IF NOT EXISTS `level3`.`subscription` (
  `subscription_id` INT NOT NULL AUTO_INCREMENT,
  `date` DATE NOT NULL,
  `renovation_date` DATE NOT NULL,
  `payment` ENUM('credit_card', 'paypal') NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`subscription_id`),
  CONSTRAINT `subscription_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `level3`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `subscription_user_idx` ON `level3`.`subscription` (`user_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `level3`.`credit_card`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level3`.`credit_card` ;

CREATE TABLE IF NOT EXISTS `level3`.`credit_card` (
  `credit_card_id` INT NOT NULL AUTO_INCREMENT,
  `card_number` VARCHAR(45) NOT NULL,
  `expiration_month` INT NOT NULL,
  `expiration_year` INT NOT NULL,
  `security_number` INT NOT NULL,
  `subscription_id` INT NOT NULL,
  PRIMARY KEY (`credit_card_id`),
  CONSTRAINT `credit_card_subscription`
    FOREIGN KEY (`subscription_id`)
    REFERENCES `level3`.`subscription` (`subscription_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `card_number_UNIQUE` ON `level3`.`credit_card` (`card_number` ASC) VISIBLE;

CREATE INDEX `credit_card_subscription_idx` ON `level3`.`credit_card` (`subscription_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `level3`.`paypal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level3`.`paypal` ;

CREATE TABLE IF NOT EXISTS `level3`.`paypal` (
  `paypal_id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `subscription_id` INT NOT NULL,
  PRIMARY KEY (`paypal_id`),
  CONSTRAINT `paypal_subscription`
    FOREIGN KEY (`subscription_id`)
    REFERENCES `level3`.`subscription` (`subscription_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `username_UNIQUE` ON `level3`.`paypal` (`username` ASC) VISIBLE;

CREATE INDEX `paypal_subscription_idx` ON `level3`.`paypal` (`subscription_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `level3`.`payment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level3`.`payment` ;

CREATE TABLE IF NOT EXISTS `level3`.`payment` (
  `payment_id` INT NOT NULL AUTO_INCREMENT,
  `payment_date` DATE NOT NULL,
  `order_number` INT NOT NULL,
  `total` FLOAT NOT NULL,
  `subscription_id` INT NOT NULL,
  PRIMARY KEY (`payment_id`),
  CONSTRAINT `payment_subscription`
    FOREIGN KEY (`subscription_id`)
    REFERENCES `level3`.`subscription` (`subscription_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `number_UNIQUE` ON `level3`.`payment` (`order_number` ASC) VISIBLE;

CREATE INDEX `payment_subscription_idx` ON `level3`.`payment` (`subscription_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `level3`.`playlist`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level3`.`playlist` ;

CREATE TABLE IF NOT EXISTS `level3`.`playlist` (
  `playlist_id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NOT NULL,
  `songs_amount` INT NOT NULL,
  `creation_date` DATE NOT NULL,
  `user_id` INT NOT NULL,
  `state` ENUM('active', 'deleted') NOT NULL,
  `delete_date` DATE NULL DEFAULT NULL,
  PRIMARY KEY (`playlist_id`),
  CONSTRAINT `playlist_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `level3`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_playlist_user1_idx` ON `level3`.`playlist` (`user_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `level3`.`artist`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level3`.`artist` ;

CREATE TABLE IF NOT EXISTS `level3`.`artist` (
  `artist_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `image` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`artist_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `level3`.`album`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level3`.`album` ;

CREATE TABLE IF NOT EXISTS `level3`.`album` (
  `album_id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NOT NULL,
  `year` INT NOT NULL,
  `image` VARCHAR(45) NOT NULL,
  `artist_id` INT NOT NULL,
  PRIMARY KEY (`album_id`),
  CONSTRAINT `album_artist`
    FOREIGN KEY (`artist_id`)
    REFERENCES `level3`.`artist` (`artist_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `album_artist_idx` ON `level3`.`album` (`artist_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `level3`.`song`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level3`.`song` ;

CREATE TABLE IF NOT EXISTS `level3`.`song` (
  `song_id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NOT NULL,
  `duration` INT NOT NULL,
  `plays` INT NOT NULL,
  `album_id` INT NOT NULL,
  PRIMARY KEY (`song_id`),
  CONSTRAINT `song_album`
    FOREIGN KEY (`album_id`)
    REFERENCES `level3`.`album` (`album_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `song_album_idx` ON `level3`.`song` (`album_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `level3`.`follow`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level3`.`follow` ;

CREATE TABLE IF NOT EXISTS `level3`.`follow` (
  `artist_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`artist_id`, `user_id`),
  CONSTRAINT `follow_artist`
    FOREIGN KEY (`artist_id`)
    REFERENCES `level3`.`artist` (`artist_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `follow_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `level3`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `follow_user_idx` ON `level3`.`follow` (`user_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `level3`.`fav_song`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level3`.`fav_song` ;

CREATE TABLE IF NOT EXISTS `level3`.`fav_song` (
  `song_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`song_id`, `user_id`),
  CONSTRAINT `fav_song_song`
    FOREIGN KEY (`song_id`)
    REFERENCES `level3`.`song` (`song_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fav_song_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `level3`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `song_like_user_idx` ON `level3`.`fav_song` (`user_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `level3`.`fav_album`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level3`.`fav_album` ;

CREATE TABLE IF NOT EXISTS `level3`.`fav_album` (
  `album_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`album_id`, `user_id`),
  CONSTRAINT `fav_album_album`
    FOREIGN KEY (`album_id`)
    REFERENCES `level3`.`album` (`album_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fav_album_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `level3`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `album_like_user_idx` ON `level3`.`fav_album` (`user_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `level3`.`shared_playlist`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level3`.`shared_playlist` ;

CREATE TABLE IF NOT EXISTS `level3`.`shared_playlist` (
  `playlist_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`playlist_id`, `user_id`),
  CONSTRAINT `shared_playlist_playlist`
    FOREIGN KEY (`playlist_id`)
    REFERENCES `level3`.`playlist` (`playlist_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `shared_playlist_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `level3`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `shared_playlist_user_idx` ON `level3`.`shared_playlist` (`user_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `level3`.`playlist_song`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level3`.`playlist_song` ;

CREATE TABLE IF NOT EXISTS `level3`.`playlist_song` (
  `playlist_id` INT NOT NULL,
  `song_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `date` DATE NOT NULL,
  PRIMARY KEY (`playlist_id`, `song_id`, `user_id`),
  CONSTRAINT `playlist_song_playlist`
    FOREIGN KEY (`playlist_id`)
    REFERENCES `level3`.`playlist` (`playlist_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `playlist_song_song`
    FOREIGN KEY (`song_id`)
    REFERENCES `level3`.`song` (`song_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `playlist_song_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `level3`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `playlist_song_song_idx` ON `level3`.`playlist_song` (`song_id` ASC) VISIBLE;

CREATE INDEX `playlist_song_user_idx` ON `level3`.`playlist_song` (`user_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `level3`.`related_artist`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `level3`.`related_artist` ;

CREATE TABLE IF NOT EXISTS `level3`.`related_artist` (
  `artist_id` INT NOT NULL,
  `related_id` INT NOT NULL,
  PRIMARY KEY (`artist_id`, `related_id`),
  CONSTRAINT `related_artist_artist`
    FOREIGN KEY (`artist_id`)
    REFERENCES `level3`.`artist` (`artist_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `related_artist_related`
    FOREIGN KEY (`related_id`)
    REFERENCES `level3`.`artist` (`artist_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `related_artist_related_idx` ON `level3`.`related_artist` (`related_id` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
